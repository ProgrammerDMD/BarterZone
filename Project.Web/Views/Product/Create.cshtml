@model Project.Domain.Entities.ProductCreateViewModel
@{
    ViewBag.Title = "Create Product";
    ViewBag.ActiveMenu = "Product";

    var categoriesSelectList = new List<SelectListItem>();
    if (ViewData["categories"] is Dictionary<int, string> categoriesDict)
    {
        foreach (var category in categoriesDict)
        {
            categoriesSelectList.Add(new SelectListItem { Value = category.Key.ToString(), Text = category.Value });
        }
    }
    else if (ViewBag.CategoriesList is IEnumerable<SelectListItem> selectList)
    {
        categoriesSelectList = selectList.ToList();
    }
}

<div class="max-w-screen-xl w-full px-4 py-10 sm:px-6 lg:px-8 lg:py-14 mx-auto">
    @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <!-- Card -->
        <div class="bg-white rounded-xl shadow-xs">
            <div class="pt-0 p-4 sm:pt-0 sm:p-7">
                <!-- Grid -->
                <div class="space-y-4 sm:space-y-6">
                    @Html.ValidationSummary(true, "", new { @class = "text-red-600 text-sm mb-4 p-3 bg-red-50 border border-red-200 rounded-md" })
                    <div class="space-y-2">
                        @Html.LabelFor(model => model.Title, "Product name", new { @for = "product-name", @class = "inline-block text-sm font-medium text-gray-800 mt-2.5" })
                        @Html.TextBoxFor(model => model.Title, new { id = "product-name", @class = "py-1.5 sm:py-2 px-3 pe-11 block w-full border-gray-200 shadow-2xs rounded-lg sm:text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none", placeholder = "Enter product name" })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-xs text-red-600 mt-1.5" })
                    </div>

                    <div class="space-y-2">
                        @Html.LabelFor(model => model.Price, "Product price", new { @for = "product-price", @class = "inline-block text-sm font-medium text-gray-800 mt-2.5" })
                        @Html.TextBoxFor(model => model.Price, new { id = "product-price", type = "number", step="0.01", min = "0.01", @class = "py-1.5 sm:py-2 px-3 pe-11 block w-full border-gray-200 shadow-2xs rounded-lg sm:text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none", placeholder = "0.00" })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-xs text-red-600 mt-1.5" })
                    </div>

                    <div class="space-y-2">
                        @Html.LabelFor(model => model.Image, "Images", new { @for = "product-images", @class = "inline-block text-sm font-medium text-gray-800 mt-2.5" })
                        <label for="product-images" class="group p-4 sm:p-7 block cursor-pointer text-center border-2 border-dashed border-gray-200 rounded-lg focus-within:outline-hidden focus-within:ring-2 focus-within:ring-blue-500 focus-within:ring-offset-2">
                            @Html.TextBoxFor(model => model.Image, new { id = "product-images", type = "file", @class = "sr-only" })
                            <svg class="size-10 mx-auto text-gray-400" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M7.646 5.146a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 6.707V10.5a.5.5 0 0 1-1 0V6.707L6.354 7.854a.5.5 0 1 1-.708-.708l2-2z"/>
                                <path d="M4.406 3.342A5.53 5.53 0 0 1 8 2c2.69 0 4.923 2 5.166 4.579C14.758 6.804 16 8.137 16 9.773 16 11.569 14.502 13 12.687 13H3.781C1.708 13 0 11.366 0 9.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383zm.653.757c-.757.653-1.153 1.44-1.153 2.056v.448l-.445.049C2.064 6.805 1 7.952 1 9.318 1 10.785 2.23 12 3.781 12h8.906C13.98 12 15 10.988 15 9.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 4.825 10.328 3 8 3a4.53 4.53 0 0 0-2.941 1.1z"/>
                            </svg>
                            <span class="mt-2 block text-sm text-gray-800">
                                Browse your device or <span class="group-hover:text-blue-700 text-blue-600">drag 'n drop'</span>
                            </span>
                            <span class="mt-1 block text-xs text-gray-500">
                                Maximum file size is 2 MB
                            </span>
                        </label>
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-xs text-red-600 mt-1.5" })
                    </div>

                    <div class="space-y-2">
                        @Html.LabelFor(model => model.Category, "Category", new { @for = "product-category", @class = "inline-block text-sm font-medium text-gray-800 mt-2.5" })
                        @Html.DropDownListFor(model => model.Category, categoriesSelectList, "Select a category", new { id = "product-category", @class = "py-1.5 sm:py-2 px-3 pe-9 block w-full border-gray-200 shadow-2xs rounded-lg sm:text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none" })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-xs text-red-600 mt-1.5" })
                    </div>

                    <div class="space-y-2">
                        @Html.LabelFor(model => model.Description, "Description", new { @for = "product-description", @class = "inline-block text-sm font-medium text-gray-800 mt-2.5" })
                        @Html.TextAreaFor(model => model.Description, new { id = "product-description", @class = "py-1.5 sm:py-2 px-3 block w-full border-gray-200 rounded-lg sm:text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none", rows = "6", placeholder = "A detailed summary will better explain your products to the audiences." })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-xs text-red-600 mt-1.5" })
                    </div>
                </div>
                <!-- End Grid -->

                <div class="mt-5 flex justify-center gap-x-2">
                    <button type="submit" class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-hidden focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none">
                        Submit your product
                    </button>
                </div>
            </div>
        </div>
        <!-- End Card -->
    }
</div>